{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { Request, Response ,NextFunction } from \"express\";\r\nimport jwt, { Secret ,JwtPayload } from 'jsonwebtoken'\r\nimport dotenv from 'dotenv'\r\ndotenv.config()\r\nconst jwtSecret: Secret = process.env.JWT_KEY || 'defaultSecret'\r\n\r\ninterface ExtendedRequest extends Request {\r\n    user?: string | JwtPayload | undefined;\r\n  }\r\n\r\nexport default function verifyToken(req: ExtendedRequest, res: Response, next: NextFunction) {\r\n  let authHeader = req.headers.authorization;\r\n  if (authHeader === undefined) {\r\n    res.status(401).send({ error: 'No token provided' });\r\n  }\r\n  let token = authHeader?.split(' ')[1];\r\n  if (token) {\r\n    jwt.verify(token, jwtSecret, (err, decoded) => {\r\n      if (err) {\r\n        res.status(500).send({ message: 'Authentication failed' });\r\n      } else {\r\n        (req as ExtendedRequest).user = decoded;\r\n        next();\r\n      }\r\n    });\r\n  }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAwC;AACxC,oBAAmB;AACnB,cAAAA,QAAO,OAAO;AACd,IAAM,YAAoB,QAAQ,IAAI,WAAW;AAMlC,SAAR,YAA6B,KAAsB,KAAe,MAAoB;AAC3F,MAAI,aAAa,IAAI,QAAQ;AAC7B,MAAI,eAAe,QAAW;AAC5B,QAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,oBAAoB,CAAC;AAAA,EACrD;AACA,MAAI,QAAQ,yCAAY,MAAM,KAAK;AACnC,MAAI,OAAO;AACT,wBAAAC,QAAI,OAAO,OAAO,WAAW,CAAC,KAAK,YAAY;AAC7C,UAAI,KAAK;AACP,YAAI,OAAO,GAAG,EAAE,KAAK,EAAE,SAAS,wBAAwB,CAAC;AAAA,MAC3D,OAAO;AACL,QAAC,IAAwB,OAAO;AAChC,aAAK;AAAA,MACP;AAAA,IACF,CAAC;AAAA,EACH;AACF;","names":["dotenv","jwt"]}